<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCACHAIYDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD1PTvDmkz6ZazSWm6SSFGY+Y4ySAT3qz/wjGjf8+f/AJFf/GrG
        lN/xJ7H/AK94/wD0EVc3V0yqVOZ+8/vOeNOFlojL/wCEY0b/AJ8//Ir/AONL/wAIzo3/AD5/+RX/AMa0
        91G6l7Sp/M/vH7On2Rmf8Izo3/Pn/wCRX/xo/wCEZ0b/AJ8//Ir/AONae6jdR7Wp/M/vD2dP+VGZ/wAI
        1o//AD5/+RX/AMaX/hGtH/59P/Ir/wCNaW6lzR7Sp/M/vD2dP+VGZ/wjWj/8+n/kV/8AGj/hGtH/AOfT
        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
        /Q0faI/736UUUcqHzMhuJleMAHvRRRVJEtn/2Q==
</value>
  </data>
</root>