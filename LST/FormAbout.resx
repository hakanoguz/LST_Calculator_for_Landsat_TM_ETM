<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCACRAHQDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD0U0lKaSuU0DNIeaBisPxJrsWiae8pIaV/ljTOMn/CmkA3XfF+
        laA3lXEhkuMf6qM8j6noP1+lea638StRvwY7eT7JCOBHB97Hux/+tXI31097ezXM5Zmdifvf54qo0RAE
        jOvzHuc1oohbqaE3iC/kU5u7gZ64c5NVoNZu7Vswzyhj1+bqarPGwkwkhc+vQUMzEgAncOCAnNVZBY9D
        8G/EC8t9QhtNTuCbWT5C7v8Ac9/Wu4Tx1pLXDxxyeYqEglQMHHfJrwQ28oO4gnPUZ61at8bMFJOOpDcf
        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
</value>
  </data>
</root>